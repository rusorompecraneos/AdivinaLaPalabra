#include <iostream>
#include <string>
#include <vector>
#include <list>
#include <algorithm>
#include <map>

using namespace std;

class AdivinaPalabra {
    // Atributos:
    string nombre;
    int cantidadJugadores;
    string categorias;
    string desarrollador;
    int añoLanzamiento = 2014;
    string plataforma;

public:
    AdivinaPalabra() {} // Constructor Vacio.

    // Los sets:
    void setnombre(string nombre) {
        this->nombre = nombre;
    }
    void setcantidadJugadores(int cantidadJugadores) {
        this->cantidadJugadores = cantidadJugadores;
    }
    void setdesarrollador(string desarrollador) {
        this->desarrollador = desarrollador;
    }
    void setplataforma(string plataforma) {
        this->plataforma = plataforma;
    }
    void setañoLanzamiento(int añoLanzamiento) {
        this->añoLanzamiento = añoLanzamiento;
    }
    void setcategoria(string categorias) {
        this->categorias = categorias;
    }

    // Los gets:
    string getnombre() {
        return nombre;
    }
    int getcantidadJugadores() {
        return cantidadJugadores;
    }
    string getdesarrollador() {
        return desarrollador;
    }
    string getplataforma() {
        return plataforma;
    }
    int getañoLanzamiento() {
        return añoLanzamiento;
    }
    string getcategorias() {
        return categorias;
    }

    // Declaracion de funciones:
    void AgregarAColeccion();
    string AsignarCategoria();
    string VideojuegosPorTitulo();
    int VideojuegosPorAñoLanzamiento();
    string VideojuegosPorPlataforma();
    void Ordenamiento();
};

void AdivinaPalabra::AgregarAColeccion() {
    list<string> coleccionDeFavoritos;
    string desicionUsuario;

    cout << "Bienvenido, a su coleccion de videojuegos, si desea agregar un videojuego a su coleccion,\n indique el numero del videojuego que desea agregar a continuacion:" << endl;
    cout << "1. Adivina la palabra" << endl;
    cout << "2. Adivina el animal" << endl;
    cout << "3. Adivina la profesion" << endl;
    cin >> desicionUsuario;

    coleccionDeFavoritos.push_back(desicionUsuario);

    cout << "Su nueva coleecion de favoritos es " << coleccionDeFavoritos.size() << endl;
}

string AdivinaPalabra::AsignarCategoria() {
    string desicionCategoria;
    list<string> categorias = {"Principiante", "Amateur", "Profesional"};

    cout << "Por favor escoja su categoria: 1. Principiante  2. Amateur  3. Profesional" << endl;
    cin >> desicionCategoria;

    cout << "Su categoria es " << desicionCategoria << endl;

    return desicionCategoria;
}

string AdivinaPalabra::VideojuegosPorTitulo() {
    list<string> listaVideojuegos = {"Adivina la palabra", "Adivina el animal", "Adivina la profesion"};

    listaVideojuegos.sort();

    for (const auto& videojuego : listaVideojuegos) {
        cout << videojuego << endl;
    }

    return " "; // Retorna un string vacío, ajusta según sea necesario
}

int AdivinaPalabra::VideojuegosPorAñoLanzamiento() {
    // Implementación pendiente
    return 0;
}

string AdivinaPalabra::VideojuegosPorPlataforma() {
    // Implementación pendiente
    return "";
}

void AdivinaPalabra::Ordenamiento() {
    // Implementación pendiente
}

//CLASE HIJA 1
class AdivinaAnimal : public AdivinaPalabra{

     AdivinaPalabra objeto1;
    list<string> listaAnimales = {"Gato", "Perro", "Caballo", "Leon", "Pajaro"};
    list<string> listaPistas = {"Es un animal domestoco, muy reservado", "Es el mejor amigo del hombre", "Es un animal usado en batalla", "Es el rey de la selva", "Puede volar"};
    // Crear un mapa para asociar animales con sus pistas
    map<string> mapaAnimalesPistas;

    public: 
    AdivinaAnimal() {
        // Inicialización del mapa aquí
        auto itAnimal = listaAnimales.begin();
        auto itPista = listaPistas.begin();
        while (itAnimal != listaAnimales.end() && itPista != listaPistas.end()){
            mapaAnimalesPistas[*itAnimal] = *itPista;       //Correccion pendiente
            ++itAnimal;
            ++itPista;
        }
    }
};
//CLASE HIJA 2
class AdivinaProfesion : public AdivinaPalabra{
        AdivinaPalabra objeto2;
        list<string> listaProfesiones = {"Policia", "Doctor", "Bombero", "DJ", "Veterinario"};
        list<string> listaPistas2 = {"Deben proteger a las personas", "Salvan vidas", "Algo se quema...", "Hacen bailar a los demas", "Hace la vida animal mas feliz"};

        map<string> mapaProfesionesPistas;
        public: 
        AdivinaProfesion() {
        // Inicialización del mapa aquí
        auto itProfesion = listaProfesiones.begin();
        auto itPista = listaPistas2.begin();
        while (itProfesion != listaProfesiones.end() && itPista != listaPistas2.end()){
            mapaProfesionesPistas[*itProfesion] = *itPista;  //Correccion pendiente
            ++Profesion;
            ++itPista;
        }
    }
    
};

//PUNTO 4, REQUIERE UNA REVISION. 
#include <iostream>
#include <string>
#include <vector>
#include <list>

using namespace std;

int main(){
    int desicionJugador;
    string desicionFavoritos;
    
    list<string> listaVideojuegos = {"Adivina la palabra", "Adivina el animal", "Adivina la profesion"};
    
    cout << "Para usar el jugador 1, pulsa el numero 1" << endl;
    cout << "Para usar el jugador 2, pulsa el numero 2" << endl;
    cin >> desicionJugador;

    if (desicionJugador == 1){
        cout << "Usted ha seleccionado el jugador uno \n" << endl;

        cout << "A continuacion indique el nombre de su juego favorito " << endl;
        cout << "1. Adivina la palabra" << endl;
        cout << "2. Adivina el animal" << endl;
        cout << "3. Adivina la profesion" << endl;
        cin >> desicionFavoritos;


    list<string> juegosFavoritos ={};

    juegosFavoritos.push_back(desicionFavoritos);

    cout << "Su nueva coleecion es " << juegosFavoritos.size() << endl;
}
    
    if (desicionJugador == 2){
        cout << "Usted ha seleccionado el jugador dos" << endl;
        cout << "A continuacion indique el nombre de su juego favorito " << endl;
        cout << "1. Adivina la palabra" << endl;
        cout << "2. Adivina el animal" << endl;
        cout << "3. Adivina la profesion" << endl;
        cin >> desicionFavoritos;


    list<string> juegosFavoritos ={};

    juegosFavoritos.push_back(desicionFavoritos);

    cout << "Su nueva coleecion es " << juegosFavoritos.size() << endl;
}
}

int main() {

}
